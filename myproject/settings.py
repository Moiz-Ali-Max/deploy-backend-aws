"""
Django settings for myproject project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import re
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
from django.core.exceptions import DisallowedRedirect

# Function to allow custom URL schemes like 'voiceorderapp://'
def allow_custom_schemes(url):
    if url.startswith("voiceorderapp://"):
        return url
    raise DisallowedRedirect(f"Unsafe redirect to URL with protocol '{url.split(':')[0]}'")

# Monkey patch Django's HttpResponseRedirect validation
from django.http.response import HttpResponseRedirect
HttpResponseRedirect.allowed_schemes = ["http", "https", "voiceorderapp"]

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-_0jd6r-d@t_j5harf&v-2m(-_xgcm0+f8b!hl6zy=l*juys)-@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
SECURE_REDIRECT_EXEMPT_SCHEMES = [
    "voiceorderapp",  # Allow your custom app scheme
]

ALLOWED_HOSTS = ['voiceorderapp','192.168.19.50','192.168.10.14','192.168.131.50', '192.168.130.50' ,'localhost', '127.0.0.1','192.168.100.50','*','192.168.18.128','192.168.213.50','172.16.0.1','192.168.8.50']
VALID_REDIRECT_REGEX = re.compile(r"^(http|https|voiceorderapp)://")

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'transcribe',
    'corsheaders',
    'rest_framework',
    'django_extensions',
    'channels',
    
    

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'myproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myproject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# settings.py
# import firebase_admin
# from firebase_admin import credentials

# # Path to your Firebase credentials
# cred = credentials.Certificate(r"C:\backend\myproject\firebase.json")

# firebase_admin.initialize_app(cred)

FIREBASE_CREDENTIALS = {
 "type": "service_account",
  "project_id": "speaknorder",
  "private_key_id": "b8cbe770fac4bd51506508ba81707ceb655def65",
  "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQD8MaKR3hIpbmRm\nLYEbHwZrTui91SyECAyjOR5pJHR2iJDSyF7RZnlB+SqvzpJTQZhLNrSR4jsPmQpC\nUbDOF1DcG2oTq9v/j6K9jULGYo9HbFqaPSVh9e3ZXABAgHjo5qnqAd3dx1srfl49\nfWlL74TE7EgHkqUct1dNElEZNnMY5kPkFLaX4F9GZfsrametzc4xgWWptdNGrF4X\nvBEGDxalpb+SeBpJnpU+lBEUoUmVcISTNQ7W3VvzLVC6RFSDKmmfg8p0wz+RiLSI\n68f51LowUhIKvXA6sjMf4FWdhqV5sB+fEKvBLbPgRLx77gptPLAEd3yDIHg/L1Cr\ndPSv21JJAgMBAAECggEAAN5EYKNutVMOmC31rPPaRC4PPdERMEqtTXYNwV+pYXuW\noQ0ky2yChBxBHf4UcaIvDao8bKimWqdEmmYY2VrJ8doLz1HHBf4W+bdV6KQv+VdZ\niACoI2pS9W28R/yRPf8GTHqRapksOo36sdQ/0625S6rDFDiYZi0I6Uhj/FXcR1SI\n3Sl1t88Mt+q+rQ1Vz657fcA+UdtfWKqUniFgYtLB39S89bbOnoKzCwA6fGek5WLo\nw6KrVjY2F3e8XQ1xdu6zerNuaguYXxpdMVaxrJw58eL8VAOoAWU3aBXD/2gYkDKK\nS+ITlAWSHFA6JF92S8VDC+MQGzW6Xmq/3epwIDS6oQKBgQD/aP8CHS3AX7RRwnYS\nF6bSCRwcOqVPEJyIyw5mE0T33O68+yH+uFxSpQcqwU5DkFEj9ijDwZa3nYorTgUR\nZvtiXWcyCe8H6P3UVdXg+kOwbwDxFdS6HVTxFVo8yF11gb6peISNFrNqNeXLVy/y\nJ+XBsqDNFFKBzNrAa5mSPY2YqQKBgQD8xrzF5y0hIyeOsWp9kCVe46BZWLiizVVu\nqQPhd6lq2HjX0DC2Xfskuv9eum181mX6lplxp0301OlCT/V999RbwdvKglyb2RBt\nFrTgje7dqQBTluUAX8WVqVFih53N6n5yH+JA4Hyww6iZ8o8ZkSbqvzS5nlz6ZSXd\nEx5sEb3QoQKBgEcYsBujia/KNESqD/nbUZmX5ZZKEOggZKKDe5+Yb5Nbka1TbtQb\n978dpxAUvTd7fcq35AMR6WV1WhfR4QFGHGX2QBqiv0IBbl7kAeRdZehADhAOFqg0\nMAfn/LV8xN9H3Y4JOUSY9Bp1pGDlBTiwOHmhwrczl///yUjU6uvVbIv5AoGALql5\nO4c7W3yj1sGFiPxNCcE3Xob0PoltFep5Xuu6CJFBbYVvGJssu1ERxyjfAUaKuMGI\nPeTGjUWocadVCBXxy6ZzrmR2OAbP83NXnIRW7fA+sS+Pwovra39AGNI0HUkGYobk\nO1m1auQTgae3Jt8Wsgrt7r3/J/H4FWFsIkL8KUECgYB1cJKwqYc3Zg/ZrXcQ57TN\nTyG05MMl4sUltxBdWaAY1L2v3rQCzDgtPqLNtErVDnEbQEiAEhz4DNYT62+PiGNg\ntyAD0/QY3ZLzBes1bbh0luAB+A2aYMDA7jrb9nmc/iyJ5ubwX7ZCeHNQ1z/TPjzN\nZuA4lEDsYWWZ/VGwKzi9Hg==\n-----END PRIVATE KEY-----\n",
  "client_email": "firebase-adminsdk-e76oc@speaknorder.iam.gserviceaccount.com",
  "client_id": "112584023589169227743",
  "auth_uri": "https://accounts.google.com/o/oauth2/auth",
  "token_uri": "https://oauth2.googleapis.com/token",
  "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
  "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-e76oc%40speaknorder.iam.gserviceaccount.com",
  "universe_domain": "googleapis.com"
}
# import firebase_admin
# from firebase_admin import credentials

# cred = credentials.Certificate(r'C:\backend\myproject\firebase.json')
# firebase_admin.initialize_app(cred, {
#     'databaseURL': 'https://firestore.googleapis.com/v1/projects/speaknorder/databases/(default)/documents'

# })

################################################
# import firebase_admin
# from firebase_admin import credentials, firestore

# # Initialize the Firebase app
# cred = credentials.Certificate(r'C:\backend\myproject\firebase.json')  # Update with the correct path
# firebase_admin.initialize_app(cred)

# # Get a Firestore client
# db = firestore.client()
#####################################################################
# settings.py

# import firebase_admin
# from firebase_admin import credentials

# # Firebase configuration
# FIREBASE_CREDENTIALS = (r'C:\backend\myproject\firebase.json' ) # Update this path
# cred = credentials.Certificate(FIREBASE_CREDENTIALS)
# firebase_admin.initialize_app(cred, {
#     'storageBucket': 'speaknorder.appspot.com'  # Update with your bucket name
# })

# # Firestore and Storage clients
# import firebase_admin
# from firebase_admin import firestore, storage

# db = firestore.client()
# bucket = storage.bucket()
ASGI_APPLICATION = 'myproject.asgi.application'
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}
import environ
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Initialize environment variables
env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

JAZZCASH_MERCHANT_ID = env('JAZZCASH_MERCHANT_ID')
JAZZCASH_PASSWORD = env('JAZZCASH_PASSWORD')
JAZZCASH_INTEGRITY_KEY = env('JAZZCASH_INTEGRITY_KEY')
JAZZCASH_RETURN_URL = env('JAZZCASH_RETURN_URL')

CSRF_COOKIE_DOMAIN = "192.168.18.128"  # or your actual domain

CSRF_COOKIE_PATH = "/"

CSRF_COOKIE_SAMESITE = "None"  # If you're using cross-origin requests

CSRF_COOKIE_SECURE = False 
# JAZZCASH_MERCHANT_ID=MC148195
# JAZZCASH_PASSWORD=t233vzg7fz
# JAZZCASH_INTEGRITY_KEY=wzu8tex9us
# JAZZCASH_RETURN_URL=mehakjaved.com

STRIPE_SECRET_KEY = "sk_test_51QlqWFApmkEJVB6tm7YiD5iNBwkQBc2Mnxb3hcYC2MsBpJuBlSBiDxd4XLwlDijV65nvUYyPGXlEmQKPWcF6mNu300CBKVpeHy"
STRIPE_PUBLISHABLE_KEY = "pk_test_51QlqWFApmkEJVB6tRSUn3ge6pifM0A5bPu7lJY0blo4dZw5jl4JPlDsETJRwTwKkobbhZF9eZfYgOjSfv80aC2nl00V1QLJpAi"
STRIPE_WEBHOOK_SECRET ='whsec_a35e7c47d2d26fe489bf177d67ce21113e64b72e1fe1e01a7934fe638c6f9beb'
